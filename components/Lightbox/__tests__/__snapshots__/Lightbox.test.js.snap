// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Lightbox renders with all props 1`] = `
<Animator
  animateOutCallback={[Function]}
  finalValue={0}
  initialValue={1334}
  shouldAnimateIn={true}
  shouldAnimateOut={false}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "rgba(0, 0, 0, 0.70)",
      "bottom": 0,
      "justifyContent": "center",
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
  type="translateY"
>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
        "position": "absolute",
        "right": 15,
        "top": 20,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 12,
          },
          Object {
            "color": "#FFFFFF",
            "fontSize": 24,
          },
          Object {
            "fontFamily": "Material Icons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
    >
      
    </Text>
  </View>
  <View
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#FFFFFF",
        "borderRadius": 10,
        "paddingHorizontal": 15,
        "paddingVertical": 10,
      }
    }
  >
    <View />
  </View>
</Animator>
`;

exports[`Lightbox renders with minimum required props 1`] = `
<Animator
  animateOutCallback={[Function]}
  finalValue={0}
  initialValue={1334}
  shouldAnimateIn={true}
  shouldAnimateOut={false}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "rgba(0, 0, 0, 0.70)",
      "bottom": 0,
      "justifyContent": "center",
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
  type="translateY"
>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
        "position": "absolute",
        "right": 15,
        "top": 20,
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={false}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": undefined,
            "fontSize": 12,
          },
          Object {
            "color": "#FFFFFF",
            "fontSize": 24,
          },
          Object {
            "fontFamily": "Material Icons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
        ]
      }
    >
      
    </Text>
  </View>
  <View
    style={
      Object {
        "alignSelf": "center",
        "backgroundColor": "#FFFFFF",
        "borderRadius": 10,
        "paddingHorizontal": 15,
        "paddingVertical": 10,
      }
    }
  />
</Animator>
`;
