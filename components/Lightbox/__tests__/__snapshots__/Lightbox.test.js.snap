// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Lightbox renders with all props 1`] = `
<Animator
  animateOutCallback={[Function]}
  finalValue={0}
  initialValue={1334}
  shouldAnimateIn={true}
  shouldAnimateOut={false}
  style={
    Object {
      "backgroundColor": "rgba(0, 0, 0, 0.70)",
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
  type="translateY"
>
  <View
    style={
      Array [
        Object {
          "alignSelf": "stretch",
          "flex": 1,
        },
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <RCTScrollView
      automaticallyAdjustContentInsets={false}
      contentContainerStyle={
        Object {
          "alignSelf": "center",
          "backgroundColor": "#FFFFFF",
          "borderRadius": 10,
          "paddingHorizontal": 15,
          "paddingVertical": 10,
        }
      }
      contentInset={
        Object {
          "bottom": 0,
        }
      }
      enableAutomaticScroll={true}
      enableResetScrollToCoords={true}
      extraHeight={75}
      extraScrollHeight={0}
      getScrollResponder={[Function]}
      handleOnScroll={[Function]}
      keyboardDismissMode="interactive"
      keyboardOpeningTime={250}
      keyboardShouldPersistTaps="handled"
      keyboardSpace={0}
      onScroll={[Function]}
      resetKeyboardSpace={[Function]}
      scrollEventThrottle={1}
      scrollForExtraHeightOnAndroid={[Function]}
      scrollIntoView={[Function]}
      scrollToEnd={[Function]}
      scrollToFocusedInput={[Function]}
      scrollToPosition={[Function]}
      showsVerticalScrollIndicator={true}
      update={[Function]}
      viewIsInsideTabBar={false}
    >
      <View>
        <View />
      </View>
    </RCTScrollView>
  </View>
</Animator>
`;

exports[`Lightbox renders with minimum required props 1`] = `
<Animator
  animateOutCallback={[Function]}
  finalValue={0}
  initialValue={1334}
  shouldAnimateIn={true}
  shouldAnimateOut={false}
  style={
    Object {
      "backgroundColor": "rgba(0, 0, 0, 0.70)",
      "bottom": 0,
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
    }
  }
  type="translateY"
>
  <View
    style={
      Array [
        Object {
          "alignSelf": "stretch",
          "flex": 1,
        },
        Object {
          "alignItems": "center",
          "flex": 1,
          "justifyContent": "center",
        },
      ]
    }
  >
    <RCTScrollView
      automaticallyAdjustContentInsets={false}
      contentContainerStyle={
        Object {
          "alignSelf": "center",
          "backgroundColor": "#FFFFFF",
          "borderRadius": 10,
          "paddingHorizontal": 15,
          "paddingVertical": 10,
        }
      }
      contentInset={
        Object {
          "bottom": 0,
        }
      }
      enableAutomaticScroll={true}
      enableResetScrollToCoords={true}
      extraHeight={75}
      extraScrollHeight={0}
      getScrollResponder={[Function]}
      handleOnScroll={[Function]}
      keyboardDismissMode="interactive"
      keyboardOpeningTime={250}
      keyboardShouldPersistTaps="handled"
      keyboardSpace={0}
      onScroll={[Function]}
      resetKeyboardSpace={[Function]}
      scrollEventThrottle={1}
      scrollForExtraHeightOnAndroid={[Function]}
      scrollIntoView={[Function]}
      scrollToEnd={[Function]}
      scrollToFocusedInput={[Function]}
      scrollToPosition={[Function]}
      showsVerticalScrollIndicator={true}
      update={[Function]}
      viewIsInsideTabBar={false}
    >
      <View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
              "position": "absolute",
              "right": 15,
              "top": 20,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": undefined,
                  "fontSize": 12,
                },
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 24,
                },
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            Óóç
          </Text>
        </View>
      </View>
    </RCTScrollView>
  </View>
</Animator>
`;
